#!/bin/bash

debug_last_call_time=$(date +%s%N)
debug_color_time=
debug_color_reset=
declare -A debug_label_colors=()

if [ -z "$DEBUG_COLORS" ] || [[ "$DEBUG_COLORS" -eq 1 ]]; then
    debug_color_time="$(tput bold)$(tput setaf 7)"
    debug_color_reset="$(tput sgr0)"
fi

#=== FUNCTION =================================================================
#        NAME: debug
# DESCRIPTION: debug output method. enabled by setting a DEBUG env var
# PARAMETER 1: message string label
# PARAMETER 2: message
#==============================================================================
debug() {
    local name="$1"
    shift
    local message="$*"

    if [ ! -z "$DEBUG" ] && [[ "$name" == $DEBUG ]]; then
        debug:get_color "$name" &> /dev/null
        echo "  $(debug:get_color "$name")$name$debug_color_reset $message $debug_color_time+$(debug:time_diff) ms$debug_color_reset"
        debug:time_reset
    fi
}

#=== FUNCTION =================================================================
#        NAME: debug:set_color
# DESCRIPTION: set a label's color
# PARAMETER 1: name
# PARAMETER 2: color index
#==============================================================================
debug:set_color() {
    local name="$1"
    local index="$2"

    if [ -z "$DEBUG_COLORS" ] || [[ "$DEBUG_COLORS" -eq 1 ]]; then
        debug_label_colors["$name"]="$(tput bold)$(tput setaf "$index")"
    fi
}

#=== FUNCTION =================================================================
#        NAME: debug:get_color
# DESCRIPTION: get a label's color
# PARAMETER 1: name
#==============================================================================
debug:get_color() {
    local name="$1"
    local color=

    if [ -z "$DEBUG_COLORS" ] || [[ "$DEBUG_COLORS" -eq 1 ]]; then
        if [ ! "${debug_label_colors[$name]+yes}" ]; then
            if [ $(tput colors) -gt 8 ]; then
                color="$RANDOM"
            else
                color=$(seq 1 8 | shuf | head -1)
            fi

            debug_label_colors["$name"]="$(tput bold)$(tput setaf "$color")"
        fi

        echo "${debug_label_colors[$name]}"
    fi
}

#=== FUNCTION =================================================================
#        NAME: debug:time_reset
# DESCRIPTION: reset the global call timer
#==============================================================================
debug:time_reset() {
    debug_last_call_time=$(date +%s%N)
}

#=== FUNCTION =================================================================
#        NAME: debug:time_diff
# DESCRIPTION: get a time difference using the global call timer
#==============================================================================
debug:time_diff() {
    local current_time=$(date +%s%N)
    local diff_time=$(( current_time - debug_last_call_time ))

    echo $(( diff_time / 1000000 ))
}
