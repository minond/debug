#!/bin/bash

DEBUG_LAST_CALL_TIME=$(date +%s%N)
DEBUG_COLOR_LABEL=
DEBUG_COLOR_TIME=
DEBUG_COLOR_RESET=

if [ -z "$DEBUG_COLORS" ] || [[ "$DEBUG_COLORS" -eq 1 ]]; then
    DEBUG_COLOR_LABEL="$(tput bold)$(tput setaf 3)"
    DEBUG_COLOR_TIME="$(tput bold)$(tput setaf 7)"
    DEBUG_COLOR_RESET="$(tput sgr0)"
fi

#=== FUNCTION =================================================================
#        NAME: debug
# DESCRIPTION: debug output method. enabled by setting a DEBUG env var
# PARAMETER 1: message string label
# PARAMETER 2: message
#==============================================================================
debug() {
    local name="$1"
    shift
    local message="$*"

    if [ ! -z "$DEBUG" ] && [[ "$name" == $DEBUG ]]; then
        echo "  $DEBUG_COLOR_LABEL$name$DEBUG_COLOR_RESET $message $DEBUG_COLOR_TIME+$(debug:time_diff) ms$DEBUG_COLOR_RESET"
        debug:time_reset
    fi
}

#=== FUNCTION =================================================================
#        NAME: debug:time_reset
# DESCRIPTION: reset the global call timer
#==============================================================================
debug:time_reset() {
    DEBUG_LAST_CALL_TIME=$(date +%s%N)
}

#=== FUNCTION =================================================================
#        NAME: debug:time_diff
# DESCRIPTION: get a time difference using the global call timer
#==============================================================================
debug:time_diff() {
    local current_time=$(date +%s%N)
    local diff_time=$(( current_time - DEBUG_LAST_CALL_TIME ))

    echo $(( diff_time / 1000000 ))
}
